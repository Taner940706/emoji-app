{"ast":null,"code":"var _jsxFileName = \"/home/taner/React/emojie-app/src/components/Emojies.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'react-dom';\nimport Card from './UI/Card';\nimport SearchBar from './UI/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Emojies = props => {\n  _s();\n  const [emojies, setEmojies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [httpError, SetHttpError] = useState();\n  useEffect(() => {\n    const fetchEmojies = async () => {\n      const response = await fetch('https://emojihub.yurace.pro/api/all');\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(\"Doesn't show available emojies!\");\n      }\n      const loadEmojies = [];\n      for (const key in responseData) {\n        loadEmojies.push({\n          id: key,\n          name: responseData[key].name,\n          category: responseData[key].category,\n          group: responseData[key].group,\n          htmlCode: responseData[key].htmlCode,\n          unicode: responseData[key].unicode\n        });\n      }\n      setEmojies(loadEmojies);\n      setLoading(false);\n    };\n    fetchEmojies().catch(error => {\n      setLoading(false);\n      SetHttpError(error.message);\n    });\n  }, []);\n  const handleSearch = searchQuery => {\n    console.log('Search query:', searchQuery);\n    if (searchQuery.length !== 0) {\n      const filteredResults = emojies.filter(emoji => emoji.name.toLowerCase().includes(searchQuery.toLowerCase()));\n      setEmojies(filteredResults);\n    } else {\n      console.log(emojies);\n      setEmojies(emojies);\n      console.log(searchQuery);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this), emojies.map(emoji => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-name\",\n          children: emoji.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-htmlcode\",\n          dangerouslySetInnerHTML: {\n            __html: emoji.htmlCode\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-category\",\n          children: emoji.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-group\",\n          children: emoji.group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-unicode\",\n          children: emoji.unicode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, emoji.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), loading && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-page\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), httpError && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-page\",\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(Emojies, \"3TUEDpMG77rQdbn8d1oYDhqgceg=\");\n_c = Emojies;\nexport default Emojies;\nvar _c;\n$RefreshReg$(_c, \"Emojies\");","map":{"version":3,"names":["React","useState","useEffect","Card","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Emojies","props","_s","emojies","setEmojies","loading","setLoading","httpError","SetHttpError","fetchEmojies","response","fetch","responseData","json","ok","Error","loadEmojies","key","push","id","name","category","group","htmlCode","unicode","catch","error","message","handleSearch","searchQuery","console","log","length","filteredResults","filter","emoji","toLowerCase","includes","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","map","className","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/home/taner/React/emojie-app/src/components/Emojies.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport 'react-dom';\nimport classes from './Emojies.module.css';\n\nimport Card from './UI/Card';\nimport SearchBar from './UI/SearchBar';\n\nconst Emojies: React.FC = (props) => {\n\n  const [emojies, setEmojies] = useState<{id: string, name: string, category: string, group: string, htmlCode: string, unicode: string}[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [httpError, SetHttpError] = useState();\n\n  useEffect(() => {\n    const fetchEmojies = async () => {\n      const response = await fetch('https://emojihub.yurace.pro/api/all');\n      const responseData = await response.json();\n\n      if (!response.ok){\n        throw new Error(\"Doesn't show available emojies!\")\n      }\n      const loadEmojies = [];\n      for (const key in responseData){\n        loadEmojies.push({\n          id: key,\n          name: responseData[key].name,\n          category: responseData[key].category,\n          group: responseData[key].group,\n          htmlCode: responseData[key].htmlCode,\n          unicode: responseData[key].unicode, \n        });\n      }\n      setEmojies(loadEmojies);\n      setLoading(false);\n    };\n    fetchEmojies().catch((error) => {\n      setLoading(false);\n      SetHttpError(error.message);\n    })\n  }, []);\n\n  const handleSearch = (searchQuery: string) => {\n    console.log('Search query:', searchQuery);\n    \n    if (searchQuery.length !== 0){\n      const filteredResults = emojies.filter((emoji) =>\n      emoji.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n      setEmojies(filteredResults);\n    }\n    else{\n      console.log(emojies)\n      setEmojies(emojies);\n      console.log(searchQuery);\n    }\n    \n  };\n\n  return <>\n  <SearchBar onSearch={handleSearch} />\n   {emojies.map((emoji) => (\n        <Card key={emoji.id}>\n          <div className='card-header'>\n          <span className='card-name'>{emoji.name}</span>\n          </div>\n          <div className='card-image'>\n          <span className='card-htmlcode' dangerouslySetInnerHTML={{ __html: emoji.htmlCode }}></span>\n          </div>\n          <div className='card-footer'>\n          <p className='card-category'>{emoji.category}</p>\n          <p className='card-group'>{emoji.group}</p>\n          <p className='card-unicode'>{emoji.unicode}</p>\n          </div>\n        </Card>\n   ))}\n\n   {loading &&  <section>\n        <p className='loading-page'>Loading...</p>\n      </section>}\n    \n    {httpError && <section>\n        <p className='error-page'>{httpError}</p>\n      </section>}\n  \n  </>\n}\nexport default Emojies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}